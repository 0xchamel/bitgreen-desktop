/*

___ _  _ ____ _  _ ____
 |  |__| |___ |\/| |___
 |  |  | |___ |  | |___

Angular Material's custom theme styles
Global styles have been moved to `/srv/http/particl-desktop/src/styles.scss`

  TOC:
    1. Palette definitions
    2. Default themes
      2.1. Light theme
      2.2. Dark theme

- Material color system: https://material.io/design/color/#tools-for-picking-colors
- Angular Material theming: https://material.angular.io/guide/theming
- Theming (& dark themes): https://coursetro.com/posts/code/116/Create-your-own-Angular-5-Material-Theme
- Theme palette generator: http://mcg.mbitson.com

*/

@import './src/assets/_config'; // import shared colors etc.
@import '~@angular/material/theming';
@include mat-core();


/* ------------------------------- *\
    1. Palette definitions
\* ------------------------------- */

// PART green
$part-green: (
  50 : #e9faf2,
  100 : #c7f2de,
  200 : #a2eac9,
  300 : #7de1b3,
  400 : #61daa2,
  500 : $color,
  600 : #3ecf8a,
  700 : #36c97f,
  800 : #2ec375,
  900 : #1fb963,
  A100 : #f1fff7,
  A200 : #beffd9,
  A400 : #8bffbb,
  A700 : #72ffac,
  contrast: (
    50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #000000,
    400 : #000000,
    500 : #ffffff,
    600 : #ffffff,
    700 : #ffffff,
    800 : #ffffff,
    900 : #ffffff,
    A100 : #000000,
    A200 : #000000,
    A400 : #000000,
    A700 : #000000,
  )
);

// PART blue
$part-blue: (
  50 : #e3f3fb,
  100 : #b9e0f5,
  200 : #8acbee,
  300 : #5bb6e7,
  400 : #38a7e2,
  500 : $secondary,
  600 : #128fd9,
  700 : #0f84d4,
  800 : #0c7acf,
  900 : #0669c7,
  A100 : #f0f7ff,
  A200 : #bddbff,
  A400 : #8ac0ff,
  A700 : #70b2ff,
  contrast: (
    50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #000000,
    400 : #000000,
    500 : #ffffff,
    600 : #ffffff,
    700 : #ffffff,
    800 : #ffffff,
    900 : #ffffff,
    A100 : #000000,
    A200 : #000000,
    A400 : #000000,
    A700 : #000000,
  )
);

// PART purple
$part-purple: (
  50 : #ebe9f4,
  100 : #cdc8e5,
  200 : #aca4d3,
  300 : #8b80c1,
  400 : #7264b4,
  500 : $tertiary,
  600 : #51429f,
  700 : #483996,
  800 : #3e318c,
  900 : #2e217c,
  A100 : #c3baff,
  A200 : #9687ff,
  A400 : #6954ff,
  A700 : #533bff,
  contrast: (
    50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #000000,
    400 : #ffffff,
    500 : #ffffff,
    600 : #ffffff,
    700 : #ffffff,
    800 : #ffffff,
    900 : #ffffff,
    A100 : #000000,
    A200 : #000000,
    A400 : #ffffff,
    A700 : #ffffff,
  )
);

// red
$part-red: (
  50: #ffebee,
  100: #ffcdd2,
  200: #ef9a9a,
  300: #e57373,
  400: #ef5350,
  500: $color-alert,
  600: #e53935,
  700: #d32f2f,
  800: #c62828,
  900: #b71c1c,
  A100: #ff8a80,
  A200: #ff5252,
  A400: #ff1744,
  A700: #d50000,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #fff,
    600: #fff,
    700: #fff,
    800: #fff,
    900: #fff,
    A100: #000000,
    A200: #000000,
    A400: #fff,
    A700: #fff,
  )
);

/*
// ------ Default, light theme ------ //

// Define the palettes
$part-default-color: mat-palette($part-green, 500, 100, 900);
$part-default-accent: mat-palette($part-blue, 500, 100, 900);
$part-default-warn: mat-palette($part-red);

// Create the theme object
$part-default-theme: mat-light-theme($part-default-color, $part-default-accent, $part-default-warn);

// Include theme styles for core and each component used in app
@include angular-material-theme($part-default-theme);


// ------ Dark theme ------ //

// Define the palettes
$part-dark-color: mat-palette($part-green, 500, 100, 900); // TODO: switch to new $dark-color
$part-dark-accent: mat-palette($part-blue, 500, 100, 900); // TODO: switch to new $dark-accent
$part-default-warn: mat-palette($part-red);
$part-dark-background: map_get($mat-grey, 900);

// Create the theme object
$part-dark-theme: mat-dark-theme($part-dark-color, $part-dark-accent);

// Insert custom background color
$dark-background: map-get($part-dark-theme, background);
$dark-background: map_merge($dark-background, (background: $part-dark-background));
$part-dark-theme: map_merge($part-dark-theme, (background: $dark-background));


// Include theme styles for core and each component used in app
.dark-theme {
  @include angular-material-theme($part-dark-theme);
}
*/


/* ------------------------------- *\
    2. Default themes
\* ------------------------------- */

// ------ 2.1 Light theme (default) ------ //

// custom background and foreground palettes
$part-light-background: (
  status-bar:               $color-white,
  app-bar:                  $color-white,
  background:               $bg,
  hover:                    rgba($bg-shadow, 0.25), 
  card:                     $color-white,
  dialog:                   $color-white,
  disabled-button:          rgba(mix($text-muted, $bg-shadow), 0.2),
  raised-button:            $color,
  focused-button:           $white-6-opacity,
  selected-button:          $color-alert,
  selected-disabled-button: $color-warning,
  disabled-button-toggle: black,
  unselected-chip:          $color-info,
  disabled-list-option:   black,
);

$part-light-foreground: (
  base:              $text,
  divider:           $bg-shadow,
  dividers:          $bg-shadow,
  disabled:          darken($bg-shadow, 10%), // disabled radio buttons
  disabled-button:   mix($text-muted, $bg-shadow),
  disabled-text:     $text-muted, // inactive steps in stepper
  hint-text:         $text-muted,
  secondary-text:    $text-muted,
  icon:              $text,
  icons:             $text,
  text:              $text,
  slider-min:        $color-alert,
  slider-off:        $bg-shadow,
  slider-off-active: rgba($color, 0.35),
);

// instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-part-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $part-light-foreground,
    background: $part-light-background,
  );
}

// The rest of this is like a normal theme.scss file. The only difference being that we use create-part-dark-theme instead of mat-light-theme
$part-light-primary: mat-palette($part-green, 500, 100, 900);
$part-light-accent: mat-palette($part-blue, 500, 100, 900);
$part-light-warn: mat-palette($part-red);

$part-light-theme: create-part-light-theme($part-light-primary, $part-light-accent, $part-light-warn);

// Include theme styles for core and each component used in app
.part-light-theme {
  @include angular-material-theme($part-light-theme);
}


// ------ 2.2 Dark theme ------ //

// custom background and foreground palettes
$part-dark-background: (
  status-bar:             green,
  app-bar:                  map_get($mat-blue, 900),
  background:             orange,
  hover:                    rgba(white, 0.04), 
  card:                     map_get($mat-red, 800),
  dialog:                   map_get($mat-grey, 800),
  disabled-button:          $white-12-opacity,
  raised-button:            map-get($mat-grey, 800),
  focused-button:           $white-6-opacity,
  selected-button:          map_get($mat-grey, 900),
  selected-disabled-button: map_get($mat-grey, 800),
  disabled-button-toggle: black,
  unselected-chip:          map_get($mat-grey, 700),
  disabled-list-option:   black,
);

$part-dark-foreground: (
  base:              $text,
  divider:           $white-12-opacity,
  dividers:          $white-12-opacity,
  disabled:          rgba(white, 0.3),
  disabled-button:   rgba(white, 0.3),
  disabled-text:     rgba(white, 0.3),
  hint-text:         rgba(white, 0.3),
  secondary-text:    rgba(white, 0.7),
  icon:              white,
  icons:             white,
  text:              $text,
  slider-min:        white,
  slider-off:        rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);

// instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-part-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: true,
    foreground: $part-dark-foreground,
    background: $part-dark-background,
  );
}

// The rest of this is like a normal theme.scss file. The only difference being that we use create-part-dark-theme instead of mat-light-theme
$part-dark-primary: mat-palette($part-green, 500, 100, 900);
$part-dark-accent: mat-palette($part-blue, 500, 100, 900);
$part-dark-warn: mat-palette($part-red);

$part-dark-theme: create-part-dark-theme($part-dark-primary, $part-dark-accent, $part-dark-warn);

// Include theme styles for core and each component used in app
.part-dark-theme {
  @include angular-material-theme($part-dark-theme);
}
